/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  font-weight:bold;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/TTNorms-Bold.woff2") format("woff2");
}
@font-face{
  font-family:"TT Norms";
  font-weight:500;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/TTNorms-Medium.woff2") format("woff2");
}
@font-face{
  font-family:"TT Norms";
  font-weight:normal;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/TTNorms-Regular.woff2") format("woff2");
}
.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
  font-weight:400;
  font-style:normal;
}

.body{
  position:relative;
  overflow-x:hidden;
}
.body::after{
  position:fixed;
  z-index:-1;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  background:linear-gradient(185.23deg, #52146f -15%, #10127b 32.04%, #52146f 66.06%, #19198d 88.16%);
  background-repeat:no-repeat;
}

a{
  text-decoration:none;
  color:#000000;
}

.layout__main{
  width:min(100% - 40px, 1500px);
  margin-inline:auto;
}

.button{
  display:flex;
  align-items:center;
  justify-content:center;
  min-width:244.25px;
  height:45px;
  padding:10px;
  cursor:pointer;
  color:#000000;
  border:none;
  border-radius:32px;
  background:#908ab1;
  font-weight:700;
  line-height:16px;
}
.button--alt{
  background:#ffffff;
}

.decor-title-box{
  display:flex;
  gap:35px;
}
.decor-title-box__title{
  display:flex;
  flex-direction:column;
  color:#ffffff;
  font-size:36px;
  font-weight:700;
  line-height:48px;
}
.decor-title-box__title span{
  font-weight:400;
}
.decor-title-box__img{
  max-width:26px;
}

.item-map{
  position:relative;
  display:flex;
  width:300px;
  height:126px;
  border-radius:20px;
}
.item-map::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.item-map__connector{
  position:absolute;
  top:122px;
}
.item-map__connector--first{
  top:-130px;
}
.item-map__connector-sm{
  position:relative;
  bottom:-93px;
  left:160px;
}
.item-map__img-box{
  z-index:1;
  display:flex;
  align-items:center;
  justify-content:center;
  width:96px;
  height:126px;
  padding:10px;
  border-radius:20px 0 0 20px;
  background:#ffffff;
  mix-blend-mode:normal;
}
.item-map__text-box{
  z-index:1;
  display:flex;
  flex-direction:column;
  justify-content:center;
  padding:20px;
}
.item-map__title{
  color:#ffffff;
  font-size:24px;
  font-weight:700;
  line-height:30px;
}
.item-map__desc{
  color:#ffffff;
  font-size:20px;
  font-weight:400;
  line-height:30px;
}

.item-benefits{
  position:relative;
}
.item-benefits::before{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.item-benefits__title-box{
  display:flex;
  align-items:center;
  justify-content:space-between;
  padding:20px 30px;
}
.item-benefits__title{
  z-index:1;
  color:#ffffff;
  font-size:24px;
  font-weight:700;
  line-height:30px;
}
.item-benefits__img{
  z-index:1;
}
.item-benefits__desc{
  position:relative;
  z-index:1;
  min-height:185px;
  padding:30px;
  text-align:justify;
  letter-spacing:-0.01em;
  color:#111631;
  border-radius:0 0 20px 20px;
  background:#ffffff;
  font-weight:500;
  line-height:30px;
  mix-blend-mode:normal;
}

.item-features{
  position:relative;
}
.item-features::before{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.item-features__title-box{
  display:flex;
  align-items:center;
  justify-content:space-between;
  gap:50px;
}
.item-features__title{
  z-index:1;
  color:#ffffff;
  font-size:24px;
  font-weight:500;
  line-height:30px;
}
.item-features__img{
  z-index:1;
}
.item-features__desc{
  position:relative;
  z-index:2;
  min-height:140px;
  padding:30px;
  text-align:justify;
  letter-spacing:-0.01em;
  color:#111631;
  border-radius:0 0 20px 20px;
  background:#ffffff;
  font-weight:400;
  line-height:30px;
  mix-blend-mode:normal;
}

.slider{
  display:none;
  user-select:none;
}
.slider.active{
  display:flex;
}
.slider__indicators{
  display:flex;
  justify-content:center;
  gap:25px;
}
.slider__indicator{
  width:40px;
  height:40px;
  transition:0.2s linear;
  opacity:0.25;
  border-radius:20px;
  background-image:url(../img/button-right.svg);
  background-position:50% 50%;
}
.slider__indicator.active{
  opacity:1;
}
.slider__indicator--left{
  transform:rotate(180deg);
}

.slider-alt{
  display:none;
  user-select:none;
}
.slider-alt.active{
  display:block;
}
.slider-alt__indicator-alt{
  transition:0.2s linear;
}
.slider-alt__indicator-alt.active{
  opacity:0.25;
}
.slider-alt__indicator-alt--left{
  transform:rotate(180deg);
}

.item-rating{
  display:flex;
  gap:20px;
}
.item-rating__img{
  max-width:35px;
  max-height:35px;
}
.item-rating__text{
  display:flex;
  flex-direction:column;
}
.item-rating__title{
  margin-bottom:10px;
  color:#fcfcfd;
  font-size:32px;
  font-weight:500;
  line-height:30px;
}
.item-rating__desc{
  color:#fcfcfd;
  font-size:20px;
}

.decor__bg-main{
  position:relative;
}
.decor__footer{
  position:relative;
}
.decor__footer::after{
  position:absolute;
  top:100px;
  right:0;
  bottom:0;
  left:0;
  content:"";
  opacity:0.25;
  background:linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0) 100%);
  box-shadow:0 4px 23px 11px rgba(0, 0, 0, 0.5);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));
  mix-blend-mode:soft-light;
}

.header{
  position:relative;
  padding-top:54px;
  overflow-x:hidden;
}
.header::after{
  position:absolute;
  top:767px;
  right:0;
  bottom:-30%;
  content:"";
  background:url(../img/decor-right.png);
  background-repeat:no-repeat;
  mix-blend-mode:multiply;
}
.header::before{
  position:absolute;
  top:715px;
  right:0;
  bottom:0;
  left:-200px;
  content:"";
  background:url(../img/decor-left.png);
  background-repeat:no-repeat;
  mix-blend-mode:multiply;
}
.header__actions{
  margin-bottom:240px;
}
.header__title{
  position:relative;
  text-align:center;
  letter-spacing:-0.01em;
  text-transform:uppercase;
  color:#fcfcfd;
  font-size:150px;
}
.header__title-desc{
  margin-bottom:50px;
  text-align:center;
  letter-spacing:-0.01em;
  text-transform:uppercase;
  color:#fcfcfd;
  font-size:48px;
  font-weight:400;
  line-height:48px;
}
.header__title-desc span{
  font-weight:700;
}
.header__decor-sm{
  display:flex;
  justify-content:center;
  margin-right:auto;
  margin-bottom:50px;
  margin-left:auto;
}
.header__button{
  display:flex;
  margin-right:auto;
  margin-bottom:440px;
  margin-left:auto;
}
.header__info-rating{
  margin-bottom:160px;
}

.rating{
  position:relative;
}
.rating::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.rating__header{
  position:relative;
  z-index:1;
  display:grid;
  align-items:center;
  min-height:220px;
  padding:30px 40px;
  gap:55px;
  grid-template-columns:1fr 1fr 1fr 1fr;
}
.rating__decor-main{
  position:absolute;
  top:-203px;
  bottom:0;
  left:50%;
  transform:translatex(-50%);
  content:"";
}
.rating__decor-title-box{
  position:relative;
  z-index:1;
}
.rating__footer{
  position:relative;
  z-index:1;
  display:flex;
  padding:56px 100px;
  border-radius:0 0 20px 20px;
  background:#ffffff;
  gap:72px;
  mix-blend-mode:normal;
}
.rating__footer-desc{
  flex:1;
  text-align:justify;
  letter-spacing:-0.01em;
  color:#111631;
  font-size:20px;
  font-weight:500;
  line-height:38px;
}
.rating__footer-desc span{
  font-weight:700;
}

.navbar{
  z-index:10;
}
.navbar__list{
  display:flex;
  gap:20px;
  margin:0;
  padding:0;
  list-style:none;
}
.navbar__link{
  display:flex;
  align-items:center;
  align-items:center;
  height:80px;
  padding:20px;
  text-align:center;
  color:#111631;
  font-weight:500;
  line-height:21px;
}
.navbar__link.active{
  border-bottom:4px solid #111631;
  font-weight:700;
}
.navbar__burger{
  position:relative;
  width:18px;
  height:30px;
  cursor:pointer;
}
.navbar__burger span{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:6%;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  background-color:gray;
}
.navbar__burger span:nth-of-type(1){
  top:0;
}
.navbar__burger span:nth-of-type(2){
  top:6px;
}
.navbar__burger span:nth-of-type(3){
  top:12px;
}
.navbar__burger.active span:nth-of-type(1){
  top:6px;
  transform:rotate(135deg);
}
.navbar__burger.active span:nth-of-type(2){
  left:0;
  opacity:0;
}
.navbar__burger.active span:nth-of-type(3){
  top:6px;
  transform:rotate(-135deg);
}

.header.active{
  position:relative;
  width:100vw;
  height:452px;
  transform:translateX(-100vw);
}

.social{
  display:flex;
  gap:25px;
}

.actions{
  display:flex;
  align-items:center;
  justify-content:space-between;
  height:80px;
  padding:0 75px;
  border-radius:70px;
  background:#ffffff;
  gap:20px;
}
.actions__logo{
  max-height:30px;
}

.main{
  overflow-x:hidden;
}

.art{
  position:relative;
}
.art__decor-right{
  position:relative;
  right:0;
  display:block;
  margin-left:auto;
}
.art__decor-box{
  position:absolute;
  z-index:1;
  top:-200px;
  right:0;
}
.art__decor-border{
  width:calc(100% - 360px);
  height:1px;
  background:#ffffff;
}
.art__decor-title-box{
  position:relative;
  z-index:1;
  margin-bottom:65px;
}
.art__title{
  display:inline-block;
  width:80%;
}
.art__box{
  position:relative;
  display:grid;
  justify-content:space-between;
  margin-bottom:140px;
  gap:40px;
  grid-template-columns:repeat(3, 1fr);
}
.art__img-box{
  position:relative;
  display:flex;
  justify-content:space-between;
  padding:25px;
}
.art__img-box::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.art__img{
  position:relative;
  z-index:1;
  width:100%;
  border-radius:20px;
}

.map__decor-box{
  position:relative;
  z-index:1;
  top:20px;
  margin-bottom:120px;
}
.map__decor-title-box{
  position:relative;
  z-index:1;
  margin-bottom:60px;
}
.map__item-first-wrap{
  display:flex;
  justify-content:start;
  margin-bottom:55px;
  gap:180px;
}
.map__item-second-wrap{
  display:flex;
  justify-content:end;
  margin-bottom:300px;
  gap:180px;
}

.benefits__decor-right{
  position:relative;
  z-index:1;
  top:-90px;
  right:-170px;
  display:block;
  margin-left:auto;
}
.benefits__decor-title-box{
  position:relative;
  z-index:1;
  margin-bottom:60px;
}
.benefits__item-box{
  display:flex;
  align-items:flex-start;
  flex-wrap:wrap;
  margin-bottom:100px;
  gap:30px;
}
.benefits__item{
  flex:1;
  flex-basis:350px;
}

.includes__box{
  position:relative;
  margin-top:-315px;
  padding-bottom:260px;
}
.includes__box::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.includes__header{
  display:flex;
  align-items:center;
  justify-content:space-between;
  padding:30px 40px;
  gap:35px;
}
.includes__decor-title-box{
  position:relative;
  z-index:1;
}
.includes__button{
  z-index:1;
}
.includes__footer{
  position:relative;
  z-index:1;
  display:flex;
  padding:50px 100px;
  border-radius:0 0 20px 20px;
  background:#ffffff;
  gap:72px;
  mix-blend-mode:normal;
}
.includes__footer-desc{
  flex:1;
  text-align:justify;
  letter-spacing:-0.01em;
  color:#111631;
  font-weight:500;
  line-height:30px;
}

.features{
  position:relative;
}
.features::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  opacity:0.25;
  background:linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0) 100%);
  box-shadow:0 4px 23px 11px rgba(0, 0, 0, 0.5);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));
  mix-blend-mode:soft-light;
}
.features__decor-title-box{
  position:relative;
  z-index:1;
  margin-bottom:70px;
}
.features__slider{
  margin-right:10px;
  margin-left:auto;
}
.features__decor-title-box{
  position:relative;
  z-index:1;
}
.features__item-box{
  align-items:flex-start;
  flex-wrap:wrap;
  margin-bottom:100px;
  gap:30px;
}
.features__item{
  flex:1;
  flex-basis:350px;
}
.features__item-box-second{
  align-items:flex-start;
  flex-wrap:wrap;
  margin-bottom:100px;
  gap:30px;
}
.features__decor-main{
  position:relative;
  z-index:1;
  top:-280px;
  right:-55%;
}

.tokenomics__wrap{
  position:relative;
  margin-bottom:100px;
  padding:50px 50px 30px 40px;
}
.tokenomics__wrap::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  content:"";
  border-radius:20px;
  background:linear-gradient(180deg, #cacaca 0%, rgba(255, 255, 255, 0) 100%);
  box-shadow:0 28px 23px 11px rgba(0, 0, 0, 0.15);
  filter:drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  mix-blend-mode:multiply;
}
.tokenomics__box{
  position:relative;
  z-index:1;
  display:flex;
  justify-content:space-between;
  gap:40px;
}
.tokenomics__decor-title-box{
  position:relative;
  z-index:1;
  margin-bottom:30px;
}
.tokenomics__decor{
  padding-left:0;
}
.tokenomics__info-box{
  padding-top:20px;
  padding-bottom:20px;
}
.tokenomics__slider{
  justify-content:center;
}
.tokenomics__slider-second{
  display:none;
}
.tokenomics__slider-wrap{
  display:flex;
  margin-bottom:30px;
}
.tokenomics__slider-button{
  order:1;
  opacity:0.2;
}
.tokenomics__slider-button--alt{
  order:0;
  transform:rotate(-180deg);
}
.tokenomics__slider-img{
  padding:0 40px;
}
.tokenomics__footer-text{
  max-width:190px;
  margin-right:auto;
  margin-left:auto;
  text-align:center;
  color:#ffffff;
  font-size:24px;
  font-weight:400;
  line-height:27px;
}
.tokenomics__footer-text span{
  font-weight:700;
}

.info-tokenomics{
  width:100%;
}
.info-tokenomics__title{
  color:#ffffff;
  font-size:24px;
  font-weight:500;
  line-height:27px;
}
.info-tokenomics__desc{
  margin-bottom:70px;
  color:#ffffff;
  font-size:36px;
  font-weight:700;
  line-height:40px;
}
.info-tokenomics__title--alt{
  margin-top:80px;
  color:#ffffff;
  font-size:65px;
  font-weight:700;
  line-height:48px;
}
.info-tokenomics__text{
  max-width:400px;
  color:#ffffff;
  font-size:24px;
  line-height:27px;
}
.info-tokenomics__text span{
  font-weight:700;
}

.footer{
  position:relative;
  background:#000000;
}
.footer::after{
  position:absolute;
  top:310px;
  width:100%;
  height:1px;
  content:"";
  background:#e6e8ec;
}
.footer__copyright{
  padding:40px;
  text-align:center;
  color:#ffffff;
  font-size:12px;
  line-height:20px;
}
.footer__box{
  display:flex;
  align-items:center;
  justify-content:center;
  gap:154px;
}
.footer__title{
  position:relative;
  display:flex;
  align-items:center;
  max-width:136px;
  padding:105px 0;
  letter-spacing:0.035em;
  color:#f4f5f6;
  font-size:48px;
  font-weight:600;
  line-height:53px;
}
.footer__title::after{
  position:absolute;
  right:-90px;
  width:2px;
  height:40px;
  content:"";
  border-radius:2px;
  background:#353945;
}
@media (min-width: 768px){
  .decor-title-box{
    align-items:center;
  }
  .decor-title-box__title--alt{
    min-width:280px;
  }
  .item-features__title-box{
    padding:20px 30px;
  }
  .art__decor-title-box{
    padding-left:40px;
  }
  .benefits__decor-title-box{
    padding-left:40px;
  }
  .benefits__decor-border{
    width:74%;
    height:1px;
    background:#ffffff;
  }
  .features__decor-border{
    width:100%;
    height:1px;
    background:#ffffff;
  }
  .features__decor-title-box{
    padding-top:120px;
    padding-left:40px;
  }
  .features__item-box-second{
    display:none;
  }
  .info-tokenomics__title{
    margin-bottom:10px;
  }
  .info-tokenomics__title--alt{
    margin-bottom:20px;
  }
}
@media (min-width: 992px){
  .decor__bg-main::after{
    position:absolute;
    z-index:0;
    top:0;
    right:0;
    bottom:0;
    left:0;
    content:"";
    background-image:url(../img/background-main-decor.png);
    background-repeat:no-repeat;
    background-position:50% 120%;
    mix-blend-mode:multiply;
  }
  .navbar__burger{
    display:none;
  }
  .tokenomics__decor-border{
    width:100%;
    height:1px;
    background:#ffffff;
  }
  .tokenomics__info-box{
    margin-left:10px;
    padding-left:50px;
    border-left:1px solid white;
  }
  .tokenomics__slider-button-wrap{
    display:none;
  }
}
@media (min-width: 1200px){
  .rating__header{
    gap:70px;
  }
}
@media (min-width: 1535px){
  .item-map__connector-sm{
    display:none;
  }
  .map__decor-title-box{
    padding-left:40px;
  }
}
@media (min-width: 1540.8px){
  .item-map__connector{
    right:55px;
  }
  .item-map__connector--second{
    right:145px;
  }
  .item-map__connector--first{
    left:55px;
  }
  .header::after{
    left:70%;
  }
}
@media (min-width: 1900px){
  .decor__bg-main::after{
    background-position:50% 25%;
    background-size:cover;
  }
}
@media (max-width: 1540.8px){
  .item-map__connector--first{
    left:76px;
  }
  .header::after{
    left:57%;
  }
}
@media (max-width: 1540.5px){
  .item-map__connector{
    right:77px;
  }
  .item-map__connector--second{
    right:165px;
  }
}
@media (max-width: 1534.8px){
  .item-map__connector{
    display:none;
  }
  .item-map__connector--second{
    display:none;
  }
  .item-map__connector--first{
    display:none;
  }
  .item-map__connector-sm{
    display:block;
  }
  .map__decor-title-box{
    display:flex;
    justify-content:center;
  }
  .map__item-first-wrap{
    align-items:center;
    flex-direction:column;
    justify-content:center;
    gap:60px;
  }
  .map__item-second-wrap{
    align-items:center;
    flex-direction:column;
    justify-content:center;
    gap:60px;
  }
}
@media (max-width: 1199.8px){
  .decor-title-box--alt{
    gap:20px;
  }
  .rating__header{
    gap:40px 200px;
    grid-template-columns:1fr 1fr;
  }
  .rating__decor-main{
    top:-155px;
    max-width:270px;
  }
  .rating__footer{
    padding:56px 40px;
  }
  .rating__footer{
    gap:40px;
  }
  .actions{
    padding:0 50px;
  }
  .art__decor-right{
    height:275px;
  }
  .art__decor-box{
    top:-114px;
  }
  .art__decor-border{
    width:calc(100% - 280px);
  }
  .map__item-second-wrap{
    margin-bottom:185px;
  }
  .benefits__decor-right{
    max-width:550px;
  }
  .includes__footer{
    padding:56px 40px;
  }
  .includes__footer{
    gap:40px;
  }
}
@media (max-width: 991.8px){
  .decor-title-box__title{
    display:flex;
    flex-direction:column;
    justify-content:center;
    margin-bottom:0;
  }
  .header::after{
    display:none;
  }
  .header::before{
    display:none;
  }
  .header__actions{
    margin-bottom:150px;
  }
  .header__title{
    font-size:100px;
  }
  .header__button{
    margin-bottom:350px;
  }
  .navbar__list{
    position:absolute;
    top:20px;
    right:-100vw;
    display:none;
    width:100%;
    min-height:452px;
    padding:20px;
    border-radius:26px;
    background-color:#ffffff;
  }
  .navbar__list.active{
    display:flex;
    align-items:center;
    flex-direction:column;
    justify-content:center;
    gap:65px;
  }
  .actions__social{
    display:none;
  }
  .art__decor-title-box{
    margin-bottom:30px;
  }
  .art__box{
    margin-bottom:95px;
    grid-template-columns:repeat(2, 1fr);
  }
  .features__decor-title-box{
    padding-top:40px;
  }
  .tokenomics__wrap{
    padding:40px 20px 20px 20px;
  }
  .tokenomics__box{
    align-items:center;
    flex-direction:column;
  }
  .tokenomics__decor-title-box{
    flex-direction:column;
    margin-left:0;
  }
  .tokenomics__info-box{
    margin-bottom:30px;
    padding-top:50px;
    text-align:center;
    border-top:1px solid #ffffff;
    border-bottom:1px solid #ffffff;
  }
  .tokenomics__slider-wrap{
    justify-content:center;
  }
  .tokenomics__footer-text{
    margin-bottom:40px;
  }
  .info-tokenomics__text{
    margin-right:auto;
    margin-bottom:50px;
    margin-left:auto;
  }
  .footer::after{
    top:180px;
  }
  .footer__copyright{
    padding:40px 20px 40px 20px;
  }
  .footer__box{
    gap:70px;
  }
  .footer__title{
    font-size:36px;
    line-height:40px;
  }
  .footer__title{
    padding:50px 0;
  }
  .footer__title::after{
    right:-27px;
  }
}
@media (max-width: 767.8px){
  .decor-title-box{
    flex-direction:column;
    gap:20px;
  }
  .decor-title-box__title{
    text-align:center;
  }
  .decor-title-box__img{
    margin-right:auto;
    margin-left:auto;
  }
  .item-benefits__title-box{
    padding:20px;
  }
  .item-benefits__title{
    font-size:20px;
    line-height:30px;
  }
  .item-benefits__desc{
    min-height:125px;
    padding:20px;
  }
  .item-features__title-box{
    padding:20px;
  }
  .item-features__title{
    font-size:20px;
    line-height:30px;
  }
  .item-features__desc{
    min-height:125px;
    padding:20px;
  }
  .slider__indicator{
    display:none;
  }
  .slider-alt__indicator-alt{
    display:none;
  }
  .item-rating{
    align-items:center;
    flex-direction:column;
  }
  .item-rating__text{
    align-items:center;
  }
  .header__title{
    font-size:80px;
    line-height:28px;
  }
  .header__title-desc{
    font-size:32px;
  }
  .header__button{
    margin-bottom:184px;
  }
  .header__info-rating{
    margin-bottom:100px;
  }
  .rating__header{
    gap:40px;
  }
  .rating__header{
    padding-top:60px;
    padding-bottom:80px;
    grid-template-columns:1fr;
  }
  .rating__decor-main{
    top:-87px;
    max-width:150px;
  }
  .rating__decor-title-box{
    margin-bottom:45px;
  }
  .rating__footer{
    flex-direction:column;
  }
  .rating__footer-decor{
    margin-right:auto;
    margin-left:auto;
  }
  .actions{
    height:65px;
    padding:15px 35px 15px 50px;
  }
  .art__decor-box{
    top:-140px;
    margin-top:0;
  }
  .art__decor-border{
    order:-1;
    width:calc(100% - 115px);
    margin-bottom:76px;
  }
  .art__box{
    gap:20px;
  }
  .art__img-box{
    padding:15px;
  }
  .map__decor-box{
    margin-bottom:100px;
  }
  .benefits__decor-right{
    top:-75px;
    right:-100px;
    max-width:400px;
    margin-bottom:45px;
  }
  .benefits__decor-title-box{
    margin-bottom:30px;
  }
  .benefits__item-box{
    padding-top:40px;
    border-top:1px solid #ffffff;
  }
  .includes__box{
    padding-bottom:170px;
  }
  .includes__header{
    flex-direction:column;
    padding-top:50px;
  }
  .includes__decor-title-box{
    margin-bottom:70px;
  }
  .includes__button{
    margin-bottom:30px;
  }
  .includes__footer{
    flex-direction:column;
  }
  .includes__footer-decor{
    margin-right:auto;
    margin-left:auto;
  }
  .features__decor-title-box{
    margin-bottom:30px;
  }
  .features__item-box{
    margin-bottom:30px;
    padding-top:40px;
    border-top:1px solid #ffffff;
  }
  .features__item-box-second{
    display:flex;
  }
  .tokenomics__info-box{
    margin-bottom:0;
    padding-top:35px;
  }
  .info-tokenomics__title{
    font-size:16px;
    line-height:20px;
  }
  .info-tokenomics__desc{
    margin-bottom:40px;
    font-size:24px;
    font-weight:500;
  }
  .info-tokenomics__title--alt{
    margin-top:30px;
    font-size:36px;
    line-height:48px;
  }
  .info-tokenomics__text{
    max-width:270px;
    margin-bottom:20px;
    font-size:16px;
    font-weight:400;
    line-height:27px;
  }
}
@media (max-width: 575.8px){
  .header{
    padding-top:20px;
  }
  .header__actions{
    margin-bottom:100px;
  }
  .header__title{
    font-size:50px;
    line-height:0;
  }
  .header__title-desc{
    margin-bottom:30px;
    font-size:24px;
    line-height:48px;
  }
  .header__decor-sm{
    margin-bottom:40px;
  }
  .map__decor-box{
    bottom:-20px;
  }
  .map__decor-left{
    height:100px;
  }
  .tokenomics__slider-img{
    max-width:85%;
    padding:0 20px;
  }
}
@media (max-width: 479.8px){
  .rating__footer{
    padding:20px;
  }
  .rating__footer-desc{
    font-size:14px;
    line-height:30px;
  }
  .navbar__burger{
    width:18px;
    height:30px;
  }
  .navbar__burger span{
    height:6%;
  }
  .navbar__burger span:nth-of-type(2){
    top:6px;
  }
  .navbar__burger span:nth-of-type(3){
    top:12px;
  }
  .art__box{
    gap:10px;
  }
  .art__img-box{
    padding:10px;
  }
  .includes__footer{
    padding:20px;
  }
  .includes__footer-desc{
    font-size:14px;
    line-height:30px;
  }
  .tokenomics__slider-img{
    max-width:80%;
    padding:0 10px;
  }
}
@media (max-width: 419.8px){
  .features__decor-main{
    right:-45%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */